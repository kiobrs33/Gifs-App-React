{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","style","styleH2","value","onChange","target","type","placeholder","color","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","styleCar","key","styleH1","textAlign","fontFamily","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"mLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAgB5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,OAMd,wBAAIO,MAAOC,GAAX,IAAsBT,EAAtB,KACA,2BACIU,MAAOV,EACPW,SAlBW,SAACR,GACpBF,EAAcE,EAAES,OAAOF,QAkBfG,KAAK,OACLC,YAAY,kBAMtBL,EAAU,CACZM,MAAM,W,uBCjCGC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,mGACqFC,UAAUH,IAD/F,SAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAACC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,yBAAKc,UAAU,0CACX,yBAAMC,IAAKf,EAAKgB,IAAKN,IACrB,+BAAKA,EAAL,OCCCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECJX,SAACA,GAAc,IAAD,EAEZlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAdAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAM,SAAAC,GACHC,YAAW,WACPJ,EAAS,CACLf,KAAOkB,EACPL,SAAU,MAEhB,UAEX,CAACpB,IAIGqB,EDVyBM,CAAa3B,GAAjCa,EAPuB,EAO5BN,KAAaa,EAPe,EAOfA,QAEpB,OACI,oCACI,wBAAI7B,MAAOC,GAAX,IAAsBQ,EAAtB,KACCoB,GAAW,wBAAIJ,UAAU,uDAAsDzB,MAAOqC,GAA3E,gBACZ,yBAAKZ,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GAAG,OACT,kBAAC,EAAD,eAAamB,IAAKnB,EAAIC,IAAQD,UAQjDlB,EAAU,CACZM,MAAM,WAGJ8B,EAAW,CACb9B,MAAM,QERJgC,EAAU,CACZC,UAAU,SACVjC,MAAM,OACNkC,WAAW,SAGAC,EA9BM,WAAO,IAAD,EACanD,mBAAS,CAAC,cADvB,mBAChBoD,EADgB,KACJrD,EADI,KAYvB,OACI,oCACG,wBAAIU,MAAOuC,GAAX,gBACA,kBAAC,EAAD,CAAajD,cAAeA,IAGxBqD,EAAWzB,KAAI,SAACT,GAAD,OAAe,kBAAC,EAAD,CAAS6B,IAAK7B,EAAUA,SAAUA,SChBzEmC,G,MAAUC,SAASC,cAAc,UAEvCC,IAASC,OAAQ,kBAAC,EAAD,MAAmBJ,I","file":"static/js/main.82bde6a1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleOnChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories((cats => [inputValue,...cats]));\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}  >\r\n            <h4 style={styleH2}> {inputValue} </h4>\r\n            <input \r\n                value={inputValue}\r\n                onChange={handleOnChange}\r\n                type='text'\r\n                placeholder='Search Name'\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nconst styleH2 = {\r\n    color:'#3498DB'\r\n};\r\n\r\nAddCategory.propTypes ={\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=ClxqkR7tvIhb1CbNDv8sIRShv0FmHduz&limit=10&q=${encodeURI(category)}`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map((img)=>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__zoomIn\">\r\n            <img  src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n// import React, { useEffect, useState } from 'react'\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    // const [images, setImages] = useState([]);\r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //         .then(( img )=> setImages(img));\r\n    // }, [category]);\r\n\r\n    const {data:images, loading}  = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h2 style={styleH2}> {category} </h2>\r\n            {loading && <h3 className=\"animate__animated animate__flash animate__slower\t3s\" style={styleCar}>Cargando....</h3>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => \r\n                        (<GifGridItem key={img.id} {...img} />)\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst styleH2 = {\r\n    color:'#FF5733'\r\n};\r\n\r\nconst styleCar = {\r\n    color:'grey'\r\n};\r\n\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data : imgs,\r\n                        loading : false,\r\n                    });\r\n                },3000)\r\n            });\r\n    }, [category]);\r\n\r\n    \r\n\r\n    return state;\r\n}","import React ,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAddCategorie = () => {\r\n    //     //#1\r\n    //     // setCategories([...categories, 'hola']);\r\n\r\n    //     //#2\r\n    //     //Recibe la informacion de el estado inicial y se lo pasa al Callback\r\n    //     setCategories((cats) => [...cats, 'hola']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n           <h1 style={styleH1}>GifExpertApp</h1>\r\n           <AddCategory setCategories={setCategories} />\r\n           {/* <button onClick={ () => handleAddCategorie() } >Add Categorie</button> */}\r\n           {\r\n               categories.map((category) => (<GifGrid key={category} category={category} />))\r\n           }\r\n        </>\r\n    )\r\n}\r\n\r\nconst styleH1 = {\r\n    textAlign:'center',\r\n    color:'grey',\r\n    fontFamily:'arial',\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render( <GifExpertApp/>  , divRoot );\n\n\n"],"sourceRoot":""}